#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Jul 07, 2021 05:58:39 AM +07  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True  

import GUIFIX_support
import tkinter.messagebox as msgbox
import stegano as steg
import cv2

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    GUIFIX_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    GUIFIX_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("640x595+630+121")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("Steganografi Kelompok 3")
        top.configure(background="#9bcdff")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Judul = tk.Label(top)
        self.Judul.place(relx=0.0, rely=0.045, height=38, width=644)
        self.Judul.configure(activebackground="#f9f9f9")
        self.Judul.configure(activeforeground="black")
        self.Judul.configure(background="#9bcdff")
        self.Judul.configure(disabledforeground="#a3a3a3")
        self.Judul.configure(font="-family {Copperplate Gothic Bold} -size 22")
        self.Judul.configure(foreground="#000000")
        self.Judul.configure(highlightbackground="#d9d9d9")
        self.Judul.configure(highlightcolor="black")
        self.Judul.configure(text='''Aplikasi Steganografi''')

        self.TSeparator1 = ttk.Separator(top)
        self.TSeparator1.place(relx=0.484, rely=0.185,  relheight=0.543)
        self.TSeparator1.configure(orient="vertical")

        self.InputGambar = tk.StringVar()
        self.Entry_InputGambar = tk.Entry(top , textvar=self.InputGambar)
        self.Entry_InputGambar.place(relx=0.047, rely=0.245, height=30
                , relwidth=0.397)
        self.Entry_InputGambar.configure(background="white")
        self.Entry_InputGambar.configure(disabledforeground="#a3a3a3")
        self.Entry_InputGambar.configure(font="TkFixedFont")
        self.Entry_InputGambar.configure(foreground="#000000")
        self.Entry_InputGambar.configure(highlightbackground="#d9d9d9")
        self.Entry_InputGambar.configure(highlightcolor="black")
        self.Entry_InputGambar.configure(insertbackground="black")
        self.Entry_InputGambar.configure(selectbackground="blue")
        self.Entry_InputGambar.configure(selectforeground="white")

        self.NamaOutput = tk.StringVar()
        self.Entry_NamaOutput = tk.Entry(top, textvar=self.NamaOutput)
        self.Entry_NamaOutput.place(relx=0.047, rely=0.375, height=30
                , relwidth=0.397)
        self.Entry_NamaOutput.configure(background="white")
        self.Entry_NamaOutput.configure(disabledforeground="#a3a3a3")
        self.Entry_NamaOutput.configure(font="TkFixedFont")
        self.Entry_NamaOutput.configure(foreground="#000000")
        self.Entry_NamaOutput.configure(highlightbackground="#d9d9d9")
        self.Entry_NamaOutput.configure(highlightcolor="black")
        self.Entry_NamaOutput.configure(insertbackground="black")
        self.Entry_NamaOutput.configure(selectbackground="blue")
        self.Entry_NamaOutput.configure(selectforeground="white")


        self.InputPesan = tk.StringVar()
        self.Entry_InputPesan = tk.Entry(top, textvar=self.InputPesan )
        self.Entry_InputPesan.place(relx=0.047, rely=0.506, height=30
                , relwidth=0.397)
        self.Entry_InputPesan.configure(background="white")
        self.Entry_InputPesan.configure(disabledforeground="#a3a3a3")
        self.Entry_InputPesan.configure(font="TkFixedFont")
        self.Entry_InputPesan.configure(foreground="#000000")
        self.Entry_InputPesan.configure(highlightbackground="#d9d9d9")
        self.Entry_InputPesan.configure(highlightcolor="black")
        self.Entry_InputPesan.configure(insertbackground="black")
        self.Entry_InputPesan.configure(selectbackground="blue")
        self.Entry_InputPesan.configure(selectforeground="white")


        self.Label_InputGambar = tk.Label(top)
        self.Label_InputGambar.place(relx=0.016, rely=0.203, height=24
                , width=144)
        self.Label_InputGambar.configure(activebackground="#f9f9f9")
        self.Label_InputGambar.configure(activeforeground="black")
        self.Label_InputGambar.configure(background="#9bcdff")
        self.Label_InputGambar.configure(disabledforeground="#a3a3a3")
        self.Label_InputGambar.configure(font="-family {Constantia} -size 12")
        self.Label_InputGambar.configure(foreground="#000000")
        self.Label_InputGambar.configure(highlightbackground="#d9d9d9")
        self.Label_InputGambar.configure(highlightcolor="black")
        self.Label_InputGambar.configure(justify='left')
        self.Label_InputGambar.configure(text='''Input Gambar''')

        self.Label_NamaOutput = tk.Label(top)
        self.Label_NamaOutput.place(relx=0.03, rely=0.333, height=23, width=185)
        self.Label_NamaOutput.configure(activebackground="#f9f9f9")
        self.Label_NamaOutput.configure(activeforeground="black")
        self.Label_NamaOutput.configure(background="#9bcdff")
        self.Label_NamaOutput.configure(disabledforeground="#a3a3a3")
        self.Label_NamaOutput.configure(font="-family {Constantia} -size 12")
        self.Label_NamaOutput.configure(foreground="#000000")
        self.Label_NamaOutput.configure(highlightbackground="#d9d9d9")
        self.Label_NamaOutput.configure(highlightcolor="black")
        self.Label_NamaOutput.configure(justify='left')
        self.Label_NamaOutput.configure(text='''Nama Output Gambar''')

        self.Label_InputPesan = tk.Label(top)
        self.Label_InputPesan.place(relx=0.002, rely=0.462, height=24, width=144)

        self.Label_InputPesan.configure(activebackground="#f9f9f9")
        self.Label_InputPesan.configure(activeforeground="black")
        self.Label_InputPesan.configure(background="#9bcdff")
        self.Label_InputPesan.configure(disabledforeground="#a3a3a3")
        self.Label_InputPesan.configure(font="-family {Constantia} -size 12")
        self.Label_InputPesan.configure(foreground="#000000")
        self.Label_InputPesan.configure(highlightbackground="#d9d9d9")
        self.Label_InputPesan.configure(highlightcolor="black")
        self.Label_InputPesan.configure(justify='left')
        self.Label_InputPesan.configure(text='''Input Pesan''')

        self.InputKunci = tk.StringVar()
        self.Entry_InputKunci = tk.Entry(top , textvar=self.InputKunci)
        self.Entry_InputKunci.place(relx=0.047, rely=0.635, height=30
                , relwidth=0.397)
        self.Entry_InputKunci.configure(background="white")
        self.Entry_InputKunci.configure(disabledforeground="#a3a3a3")
        self.Entry_InputKunci.configure(font="TkFixedFont")
        self.Entry_InputKunci.configure(foreground="#000000")
        self.Entry_InputKunci.configure(highlightbackground="#d9d9d9")
        self.Entry_InputKunci.configure(highlightcolor="black")
        self.Entry_InputKunci.configure(insertbackground="black")
        self.Entry_InputKunci.configure(selectbackground="blue")
        self.Entry_InputKunci.configure(selectforeground="white")

        self.Label_InputKunci = tk.Label(top)
        self.Label_InputKunci.place(relx=0.002, rely=0.593, height=23, width=144)

        self.Label_InputKunci.configure(activebackground="#f9f9f9")
        self.Label_InputKunci.configure(activeforeground="black")
        self.Label_InputKunci.configure(background="#9bcdff")
        self.Label_InputKunci.configure(disabledforeground="#a3a3a3")
        self.Label_InputKunci.configure(font="-family {Constantia} -size 12")
        self.Label_InputKunci.configure(foreground="#000000")
        self.Label_InputKunci.configure(highlightbackground="#d9d9d9")
        self.Label_InputKunci.configure(highlightcolor="black")
        self.Label_InputKunci.configure(justify='left')
        self.Label_InputKunci.configure(text='''Input Kunci''')

        self.Button_Encode = tk.Button(top)
        self.Button_Encode.place(relx=0.048, rely=0.726, height=34, width=87)
        self.Button_Encode.configure(activebackground="#ececec")
        self.Button_Encode.configure(activeforeground="#000000")
        self.Button_Encode.configure(background="#e0f086")
        self.Button_Encode.configure(disabledforeground="#a3a3a3")
        self.Button_Encode.configure(font="-family {Century} -size 11")
        self.Button_Encode.configure(foreground="#000000")
        self.Button_Encode.configure(highlightbackground="#d9d9d9")
        self.Button_Encode.configure(highlightcolor="black")
        self.Button_Encode.configure(pady="0")
        self.Button_Encode.configure(text='''Encode''', command=self.prosesEncode)

        self.Entry_NilaiMSE = tk.Entry(top)
        self.Entry_NilaiMSE.place(relx=0.266, rely=0.879, height=30
                , relwidth=0.194)
        self.Entry_NilaiMSE.configure(background="white")
        self.Entry_NilaiMSE.configure(disabledforeground="#a3a3a3")
        self.Entry_NilaiMSE.configure(font="TkFixedFont")
        self.Entry_NilaiMSE.configure(foreground="#000000")
        self.Entry_NilaiMSE.configure(highlightbackground="#d9d9d9")
        self.Entry_NilaiMSE.configure(highlightcolor="black")
        self.Entry_NilaiMSE.configure(insertbackground="black")
        self.Entry_NilaiMSE.configure(readonlybackground="#f0f0f0f0f0f0")
        self.Entry_NilaiMSE.configure(selectbackground="blue")
        self.Entry_NilaiMSE.configure(selectforeground="white")
        self.Entry_NilaiMSE.configure(state='readonly')

        self.Entry_NilaiPSNR = tk.Entry(top)
        self.Entry_NilaiPSNR.place(relx=0.5, rely=0.879, height=30
                , relwidth=0.194)
        self.Entry_NilaiPSNR.configure(background="white")
        self.Entry_NilaiPSNR.configure(disabledforeground="#a3a3a3")
        self.Entry_NilaiPSNR.configure(font="TkFixedFont")
        self.Entry_NilaiPSNR.configure(foreground="#000000")
        self.Entry_NilaiPSNR.configure(highlightbackground="#d9d9d9")
        self.Entry_NilaiPSNR.configure(highlightcolor="black")
        self.Entry_NilaiPSNR.configure(insertbackground="black")
        self.Entry_NilaiPSNR.configure(selectbackground="blue")
        self.Entry_NilaiPSNR.configure(selectforeground="white")
        self.Entry_NilaiPSNR.configure(state='readonly')

        self.Label_NilaiMSE = tk.Label(top)
        self.Label_NilaiMSE.place(relx=0.288, rely=0.84, height=23, width=94)
        self.Label_NilaiMSE.configure(activebackground="#f9f9f9")
        self.Label_NilaiMSE.configure(activeforeground="black")
        self.Label_NilaiMSE.configure(background="#9bcdff")
        self.Label_NilaiMSE.configure(disabledforeground="#a3a3a3")
        self.Label_NilaiMSE.configure(font="-family {Constantia} -size 10")
        self.Label_NilaiMSE.configure(foreground="#000000")
        self.Label_NilaiMSE.configure(highlightbackground="#d9d9d9")
        self.Label_NilaiMSE.configure(highlightcolor="black")
        self.Label_NilaiMSE.configure(justify='left')
        self.Label_NilaiMSE.configure(text='''Nilai MSE''')

        self.Label_NilaiPSNR = tk.Label(top)
        self.Label_NilaiPSNR.place(relx=0.522, rely=0.84, height=23, width=94)
        self.Label_NilaiPSNR.configure(activebackground="#f9f9f9")
        self.Label_NilaiPSNR.configure(activeforeground="black")
        self.Label_NilaiPSNR.configure(background="#9bcdff")
        self.Label_NilaiPSNR.configure(disabledforeground="#a3a3a3")
        self.Label_NilaiPSNR.configure(font="-family {Constantia} -size 10")
        self.Label_NilaiPSNR.configure(foreground="#000000")
        self.Label_NilaiPSNR.configure(highlightbackground="#d9d9d9")
        self.Label_NilaiPSNR.configure(highlightcolor="black")
        self.Label_NilaiPSNR.configure(justify='left')
        self.Label_NilaiPSNR.configure(text='''Nilai PSNR''')


        self.InputGambarDecode = tk.StringVar()
        self.Entry_InputGambarDecode = tk.Entry(top, textvar=self.InputGambarDecode)
        self.Entry_InputGambarDecode.place(relx=0.547, rely=0.314, height=30
                , relwidth=0.397)
        self.Entry_InputGambarDecode.configure(background="white")
        self.Entry_InputGambarDecode.configure(disabledforeground="#a3a3a3")
        self.Entry_InputGambarDecode.configure(font="TkFixedFont")
        self.Entry_InputGambarDecode.configure(foreground="#000000")
        self.Entry_InputGambarDecode.configure(highlightbackground="#d9d9d9")
        self.Entry_InputGambarDecode.configure(highlightcolor="black")
        self.Entry_InputGambarDecode.configure(insertbackground="black")
        self.Entry_InputGambarDecode.configure(selectbackground="blue")
        self.Entry_InputGambarDecode.configure(selectforeground="white")

        self.Label_InputGambarDecode = tk.Label(top)
        self.Label_InputGambarDecode.place(relx=0.75, rely=0.274, height=23
                , width=144)
        self.Label_InputGambarDecode.configure(activebackground="#f9f9f9")
        self.Label_InputGambarDecode.configure(activeforeground="black")
        self.Label_InputGambarDecode.configure(background="#9bcdff")
        self.Label_InputGambarDecode.configure(disabledforeground="#a3a3a3")
        self.Label_InputGambarDecode.configure(font="-family {Constantia} -size 12")
        self.Label_InputGambarDecode.configure(foreground="#000000")
        self.Label_InputGambarDecode.configure(highlightbackground="#d9d9d9")
        self.Label_InputGambarDecode.configure(highlightcolor="black")
        self.Label_InputGambarDecode.configure(justify='left')
        self.Label_InputGambarDecode.configure(text='''Input Gambar''')

        self.Label_InputKunciDecode = tk.Label(top)
        self.Label_InputKunciDecode.place(relx=0.763, rely=0.402, height=23
                , width=144)
        self.Label_InputKunciDecode.configure(activebackground="#f9f9f9")
        self.Label_InputKunciDecode.configure(activeforeground="black")
        self.Label_InputKunciDecode.configure(background="#9bcdff")
        self.Label_InputKunciDecode.configure(disabledforeground="#a3a3a3")
        self.Label_InputKunciDecode.configure(font="-family {Constantia} -size 12")
        self.Label_InputKunciDecode.configure(foreground="#000000")
        self.Label_InputKunciDecode.configure(highlightbackground="#d9d9d9")
        self.Label_InputKunciDecode.configure(highlightcolor="black")
        self.Label_InputKunciDecode.configure(justify='left')
        self.Label_InputKunciDecode.configure(text='''Input Kunci''')

        self.InputkunciDecode = tk.StringVar()
        self.Entry_InputkunciDecode = tk.Entry(top, textvar=self.InputkunciDecode)
        self.Entry_InputkunciDecode.place(relx=0.547, rely=0.444, height=30
                , relwidth=0.397)
        self.Entry_InputkunciDecode.configure(background="white")
        self.Entry_InputkunciDecode.configure(disabledforeground="#a3a3a3")
        self.Entry_InputkunciDecode.configure(font="TkFixedFont")
        self.Entry_InputkunciDecode.configure(foreground="#000000")
        self.Entry_InputkunciDecode.configure(highlightbackground="#d9d9d9")
        self.Entry_InputkunciDecode.configure(highlightcolor="black")
        self.Entry_InputkunciDecode.configure(insertbackground="black")
        self.Entry_InputkunciDecode.configure(selectbackground="blue")
        self.Entry_InputkunciDecode.configure(selectforeground="white")

    
        self.Entry_Pesan = tk.Entry(top)
        self.Entry_Pesan.place(relx=0.547, rely=0.575, height=30, relwidth=0.397)

        self.Entry_Pesan.configure(background="white")
        self.Entry_Pesan.configure(disabledforeground="#a3a3a3")
        self.Entry_Pesan.configure(font="TkFixedFont")
        self.Entry_Pesan.configure(foreground="#000000")
        self.Entry_Pesan.configure(highlightbackground="#d9d9d9")
        self.Entry_Pesan.configure(highlightcolor="black")
        self.Entry_Pesan.configure(insertbackground="black")
        self.Entry_Pesan.configure(selectbackground="blue")
        self.Entry_Pesan.configure(selectforeground="white")
        self.Entry_Pesan.configure(state='readonly')

        self.Entry_NilaiHash = tk.Entry(top)
        self.Entry_NilaiHash.place(relx=0.269, rely=0.778, height=30
                , relwidth=0.428)
        self.Entry_NilaiHash.configure(background="white")
        self.Entry_NilaiHash.configure(disabledforeground="#a3a3a3")
        self.Entry_NilaiHash.configure(font="TkFixedFont")
        self.Entry_NilaiHash.configure(foreground="#000000")
        self.Entry_NilaiHash.configure(highlightbackground="#d9d9d9")
        self.Entry_NilaiHash.configure(highlightcolor="black")
        self.Entry_NilaiHash.configure(insertbackground="black")
        self.Entry_NilaiHash.configure(selectbackground="blue")
        self.Entry_NilaiHash.configure(selectforeground="white")
        self.Entry_NilaiHash.configure(state='readonly')


        self.Label_Pesan = tk.Label(top)
        self.Label_Pesan.place(relx=0.856, rely=0.534, height=24, width=64)
        self.Label_Pesan.configure(activebackground="#f9f9f9")
        self.Label_Pesan.configure(activeforeground="black")
        self.Label_Pesan.configure(background="#9bcdff")
        self.Label_Pesan.configure(disabledforeground="#a3a3a3")
        self.Label_Pesan.configure(font="-family {Constantia} -size 12")
        self.Label_Pesan.configure(foreground="#000000")
        self.Label_Pesan.configure(highlightbackground="#d9d9d9")
        self.Label_Pesan.configure(highlightcolor="black")
        self.Label_Pesan.configure(justify='left')
        self.Label_Pesan.configure(text='''Pesan''')


        self.Label_NilaiHash = tk.Label(top)
        self.Label_NilaiHash.place(relx=0.375, rely=0.739, height=23, width=144)
        self.Label_NilaiHash.configure(activebackground="#f9f9f9")
        self.Label_NilaiHash.configure(activeforeground="black")
        self.Label_NilaiHash.configure(background="#9bcdff")
        self.Label_NilaiHash.configure(disabledforeground="#a3a3a3")
        self.Label_NilaiHash.configure(font="-family {Constantia} -size 12")
        self.Label_NilaiHash.configure(foreground="#000000")
        self.Label_NilaiHash.configure(highlightbackground="#d9d9d9")
        self.Label_NilaiHash.configure(highlightcolor="black")
        self.Label_NilaiHash.configure(justify='left')
        self.Label_NilaiHash.configure(text='''Nilai Hash''')

        self.Button_Decode = tk.Button(top)
        self.Button_Decode.place(relx=0.803, rely=0.682, height=34, width=87)
        self.Button_Decode.configure(activebackground="#ececec")
        self.Button_Decode.configure(activeforeground="#000000")
        self.Button_Decode.configure(background="#8efdc9")
        self.Button_Decode.configure(disabledforeground="#a3a3a3")
        self.Button_Decode.configure(font="-family {Century} -size 11")
        self.Button_Decode.configure(foreground="#000000")
        self.Button_Decode.configure(highlightbackground="#d9d9d9")
        self.Button_Decode.configure(highlightcolor="black")
        self.Button_Decode.configure(pady="0")
        self.Button_Decode.configure(text='''Decode''', command=self.prosesDecode)

        self.Label_FitraSekar = tk.Label(top)
        self.Label_FitraSekar.place(relx=-0.011, rely=0.106, height=38
                , width=644)
        self.Label_FitraSekar.configure(activebackground="#f9f9f9")
        self.Label_FitraSekar.configure(activeforeground="black")
        self.Label_FitraSekar.configure(background="#9bcdff")
        self.Label_FitraSekar.configure(disabledforeground="#a3a3a3")
        self.Label_FitraSekar.configure(font="-family {French Script MT} -size 19")
        self.Label_FitraSekar.configure(foreground="#000000")
        self.Label_FitraSekar.configure(highlightbackground="#d9d9d9")
        self.Label_FitraSekar.configure(highlightcolor="black")
        self.Label_FitraSekar.configure(text='''Fitra Hutomo & Sekar Mutiara''')

    def prosesEncode(self):
        COVER_PATH = self.Entry_InputGambar.get()
        OUTPUT_PATH = self.Entry_NamaOutput.get()
        msg = self.Entry_InputPesan.get()
        pwd = self.Entry_InputKunci.get()
        secret_message = steg.AESCipher(pwd).encrypt(msg).decode('utf-8')
        hasil = steg.hashlib.sha256(msg.encode())
        hasil_hash = hasil.hexdigest()

        self.Entry_NilaiHash.configure(state='normal')
        self.Entry_NilaiHash.insert(0, hasil_hash)

        steg.DCT().encoding(COVER_PATH , OUTPUT_PATH , secret_message)
        
        # Menghitung nilai MSE dan PSNR
        original = cv2.imread(COVER_PATH)
        dctEncoded = cv2.imread(OUTPUT_PATH)
        original = cv2.cvtColor(original, cv2.COLOR_BGR2RGB)
        dct_encoded_img = cv2.cvtColor(dctEncoded, cv2.COLOR_BGR2RGB)
        MSE = steg.Compare().MSE(original, dct_encoded_img)
        hasil_MSE = f"{MSE}"

        self.Entry_NilaiMSE.configure(state='normal')
        self.Entry_NilaiMSE.insert(0, hasil_MSE)
    
        PSNR = steg.Compare().PSNR(original, dct_encoded_img)
        hasil_MSE = f"{PSNR}"

        self.Entry_NilaiPSNR.configure(state='normal')
        self.Entry_NilaiPSNR.insert(0, hasil_MSE)

        self.Entry_InputPesan.delete("0","end")
        self.Entry_InputKunci.delete("0","end")
        self.Entry_InputGambarDecode.delete("0","end")
        self.Entry_InputkunciDecode.delete("0","end")
        self.Entry_Pesan.delete("0","end")

        self.Entry_NilaiHash.configure(state='readonly')
        self.Entry_NilaiMSE.configure(state='readonly')
        self.Entry_NilaiPSNR.configure(state='readonly')

        msgbox.showinfo("Success", "Berhasil Encode Image")

    def prosesDecode(self):

        self.Entry_NilaiHash.delete("0","end")
        STEGANO_PATH = self.Entry_InputGambarDecode.get()
        hasil_decode =  steg.DCT().decoding(STEGANO_PATH)
        ciphertext = hasil_decode
        kunci_dekrip = self.Entry_InputkunciDecode.get()
        pesan = steg.AESCipher(kunci_dekrip).decrypt(ciphertext).decode('utf-8')

        self.Entry_Pesan.configure(state='normal')
        self.Entry_Pesan.insert(0, pesan)

        hash_pesan = steg.hashlib.sha256(pesan.encode())
        hasil_hashDecode = hash_pesan.hexdigest()

        self.Entry_NilaiHash.configure(state='normal')
        self.Entry_NilaiHash.insert(0, hasil_hashDecode)

        self.Entry_NilaiMSE.configure(state='normal')
        self.Entry_NilaiPSNR.configure(state='normal')
        # menghapus text pada Box Entry
        self.Entry_InputGambar.delete("0","end")
        self.Entry_NamaOutput.delete("0","end")
        self.Entry_InputPesan.delete("0","end")
        self.Entry_InputKunci.delete("0","end")
        self.Entry_NilaiMSE.delete("0","end")
        self.Entry_NilaiPSNR.delete("0","end")
        
        self.Entry_NilaiMSE.configure(state='readonly')
        self.Entry_NilaiPSNR.configure(state='readonly')
        self.Entry_Pesan.configure(state='readonly')
        self.Entry_NilaiHash.configure(state='readonly')
        msgbox.showinfo("Success", "Berhasil Decode Image")
           

if __name__ == '__main__':
    vp_start_gui()





